# Generated by Django 4.0.4 on 2022-11-24 08:10

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CUSTOMER',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CUS_LNAME', models.CharField(max_length=50)),
                ('CUS_FNAME', models.CharField(max_length=50)),
                ('CUS_CONTACT_NUMBER', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='LOCATION',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LOC_CITY', models.CharField(max_length=500)),
                ('LOC_REGION', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='PAYMENT',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PAYTYPE', models.CharField(max_length=10)),
                ('PAY_AMOUNT', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='RIDER',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RIDER_LNAME', models.CharField(max_length=50)),
                ('RIDER_FNAME', models.CharField(max_length=50)),
                ('RIDER_CONTACT_NUMBER', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='RESTAURANT',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RES_NAME', models.CharField(max_length=50)),
                ('LOC_NUMBER', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='res_location', to='Tiger_food.location')),
            ],
        ),
        migrations.CreateModel(
            name='RESIDENCE',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('RESD_STREET', models.CharField(max_length=100)),
                ('RESD_BLDG', models.CharField(max_length=100)),
                ('LOC_NUMBER', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='location', to='Tiger_food.location')),
            ],
        ),
        migrations.CreateModel(
            name='ORDER',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ORDER_DATE', models.DateTimeField()),
                ('ORDER_TIME', models.DateTimeField()),
                ('CUS_CODE', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='res_location', to='Tiger_food.customer')),
                ('PAY_ID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payment', to='Tiger_food.payment')),
                ('RIDER_ID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rider', to='Tiger_food.rider')),
            ],
        ),
        migrations.AddField(
            model_name='customer',
            name='RESIDENCE',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cus_resdence', to='Tiger_food.residence'),
        ),
        migrations.AddField(
            model_name='customer',
            name='user',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
    ]
